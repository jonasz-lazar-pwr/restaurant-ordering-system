services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:4.1.0-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
#      Username: admin
#      Password: admin
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  kong:
    image: kong:3.6.1
    container_name: api-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/kong/declarative/kong.yml"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "${KONG_GATEWAY_PORT}:${KONG_GATEWAY_PORT}"               # publiczny HTTP
      - "${KONG_GATEWAY_ADMIN_PORT}:${KONG_GATEWAY_ADMIN_PORT}"   # admin API
    volumes:
      - ./kong/kong.yml:/kong/declarative/kong.yml

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    command: >
      uvicorn api.main:app --host 0.0.0.0 --port ${AUTH_SERVICE_PORT}
    volumes:
      - ../auth-service:/app
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      kong:
        condition: service_started

  order-service:
    image: order-service:latest
    container_name: order-service
    build:
      context: ../order-service
      dockerfile: Dockerfile
    command: >
      uvicorn api.main:app --host 0.0.0.0 --port ${ORDER_SERVICE_PORT}
    volumes:
      - ../order-service:/app
    ports:
      - "${ORDER_SERVICE_PORT}:${ORDER_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      kong:
        condition: service_started

  staff-service:
    image: staff-service:latest
    container_name: staff-service
    build:
      context: ../staff-service
      dockerfile: Dockerfile
    command: >
      uvicorn api.main:app --host 0.0.0.0 --port ${STAFF_SERVICE_PORT}
    volumes:
      - ../staff-service:/app
    ports:
      - "${STAFF_SERVICE_PORT}:${STAFF_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - kong

  payment-service:
    image: payment-service:latest
    container_name: payment-service
    build:
      context: ../payment-service
      dockerfile: Dockerfile
    command: >
      uvicorn api.main:app --host 0.0.0.0 --port ${PAYMENT_SERVICE_PORT}
    volumes:
      - ../payment-service:/app
    ports:
      - "${PAYMENT_SERVICE_PORT}:${PAYMENT_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - kong

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    command: >
      uvicorn api.main:app --host 0.0.0.0 --port ${NOTIFICATION_SERVICE_PORT}
    volumes:
      - ../notification-service:/app
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
      - kong

volumes:
  postgres_data:
